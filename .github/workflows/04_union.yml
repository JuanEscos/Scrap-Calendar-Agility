name: 04 Union participantes

on:
  workflow_dispatch: {}
  schedule:
    - cron: "25 5 * * *"

jobs:
  union:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    env:
      OUT_DIR: ./output

    steps:
      - uses: actions/checkout@v4

      - name: Ensure output dir
        shell: bash
        run: mkdir -p "$OUT_DIR"

      # 1) Último run SUCCESS del workflow 03 (por nombre de fichero)
      - name: Get latest successful run of 03
        id: getrun
        uses: actions/github-script@v7
        with:
          script: |
            const wfFile = '03_participantes.yml';
            const res = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: wfFile,
              status: 'success',
              per_page: 1
            });
            if (!res.data.workflow_runs.length) {
              core.setFailed(`No successful runs for ${wfFile}`);
              return;
            }
            const run = res.data.workflow_runs[0];
            core.setOutput('run_id', String(run.id));
            core.setOutput('run_url', run.html_url);

      - name: Echo selected run
        shell: bash
        run: |
          printf 'Using 03 run: %s\n' "${{ steps.getrun.outputs.run_url }}"

      # 2) Descargar TODOS los artefactos de ese run por patrón
      - name: Download artifacts from 03 run (pattern "*")
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ steps.getrun.outputs.run_id }}
          pattern: "*"
          merge-multiple: true
          path: ${{ env.OUT_DIR }}

      # 3) Comprobar que realmente descargamos algo
      - name: Fail if nothing downloaded
        shell: bash
        run: |
          set -euo pipefail
          if ! ls -1 "$OUT_DIR"/* 1>/dev/null 2>&1; then
            echo "::error::No se descargó ningún artefacto del 03. Verifica que el 03 sube 'a03-participants-processed'."; exit 1
          fi

      - name: Debug listing
        shell: bash
        run: |
          echo "Contenido de $OUT_DIR:"
          ls -la "$OUT_DIR" || true
          echo "Ficheros:"
          find "$OUT_DIR" -maxdepth 1 -type f -printf "%f\n" || true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run union
        shell: bash
        run: |
          set -euo pipefail
          python ./04_eventosproxUnion.py "$OUT_DIR" "$OUT_DIR/participantes_completos_final.json"

      - name: Upload final artifact
        uses: actions/upload-artifact@v4
        with:
          name: a04-participantes-final
          path: ${{ env.OUT_DIR }}/participantes_completos_final.json
          if-no-files-found: error
