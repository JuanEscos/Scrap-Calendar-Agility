name: 04 Union participantes

on:
  workflow_dispatch: {}
  schedule:
    - cron: "25 5 * * *"

jobs:
  union:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    env:
      OUT_DIR: ./output

    steps:
      - uses: actions/checkout@v4

      - name: Ensure output dir
        shell: bash
        run: mkdir -p "$OUT_DIR"

      # 1) Último run SUCCESS del workflow 03 (por nombre de fichero)
      - name: Get latest successful run of 03
        id: getrun
        uses: actions/github-script@v7
        with:
          script: |
            const wfFile = '03_participantes.yml';
            const res = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: wfFile,
              status: 'success',
              per_page: 1
            });
            if (!res.data.workflow_runs.length) {
              core.setFailed(`No successful runs for ${wfFile}`);
              return;
            }
            const run = res.data.workflow_runs[0];
            core.setOutput('run_id', String(run.id));
            core.setOutput('run_url', run.html_url);

      - name: Echo selected run
        shell: bash
        run: |
          printf 'Using 03 run: %s\n' "${{ steps.getrun.outputs.run_url }}"

      # 2) Artefactos en ese run
      - name: List artifacts in that run
        id: listart
        uses: actions/github-script@v7
        env:
          RUN_ID: ${{ steps.getrun.outputs.run_id }}
        with:
          script: |
            const run_id = Number(process.env.RUN_ID);
            const TARGET = 'a03-participants-processed';
            const res = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id
            });
            const arts = res.data.artifacts || [];
            console.log("Artifacts in run:", arts.map(a => ({id:a.id,name:a.name,size:a.size_in_bytes,expired:a.expired})));
            const exact = arts.filter(a => a.name === TARGET && !a.expired);
            if (exact.length) {
              core.setOutput('artifact_ids', exact.map(a => String(a.id)).join(','));
            } else if (arts.length) {
              core.setOutput('artifact_ids', arts.filter(a => !a.expired).map(a => String(a.id)).join(','));
            } else {
              core.setOutput('artifact_ids', '');
            }

      # 3) Descargar artefactos del run (si hay)
      - name: Download artifacts from run (by IDs)
        if: steps.listart.outputs.artifact_ids != ''
        uses: actions/download-artifact@v4
        with:
          artifact-ids: ${{ steps.listart.outputs.artifact_ids }}
          merge-multiple: true
          path: ${{ env.OUT_DIR }}

      # 4) Fallback repo-level si el run no tenía artefactos
      - name: Find repo-level fallback artifact
        id: repoart
        if: steps.listart.outputs.artifact_ids == ''
        uses: actions/github-script@v7
        with:
          script: |
            const TARGET = 'a03-participants-processed';
            let page = 1, found = null;
            while (page <= 10 && !found) {
              const res = await github.rest.actions.listArtifactsForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100,
                page
              });
              const arts = res.data.artifacts || [];
              const candidates = arts.filter(a => a.name === TARGET && !a.expired);
              if (candidates.length) {
                candidates.sort((a,b) => new Date(b.created_at) - new Date(a.created_at));
                found = candidates[0];
              }
              if (arts.length < 100) break;
              page++;
            }
            core.setOutput('artifact_ids', found ? String(found.id) : '');

      - name: Download repo-level fallback artifact
        if: steps.listart.outputs.artifact_ids == '' && steps.repoart.outputs.artifact_ids != ''
        uses: actions/download-artifact@v4
        with:
          artifact-ids: ${{ steps.repoart.outputs.artifact_ids }}
          merge-multiple: true
          path: ${{ env.OUT_DIR }}

      # 5) Error claro si no se descargó nada
      - name: Fail if nothing downloaded
        if: steps.listart.outputs.artifact_ids == '' && steps.repoart.outputs.artifact_ids == ''
        shell: bash
        run: |
          echo "::error::No se encontraron artefactos del 03 para descargar (ni en el run ni a nivel de repo)."
          exit 1

      - name: Debug listing
        shell: bash
        run: |
          echo "Contenido de $OUT_DIR:"
          ls -la "$OUT_DIR" || true
          echo "Ficheros:"
          find "$OUT_DIR" -maxdepth 1 -type f -printf "%f\n" || true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run union
        shell: bash
        run: |
          set -euo pipefail
          python ./04_eventosproxUnion.py "$OUT_DIR" "$OUT_DIR/participantes_completos_final.json"

      - name: Upload final artifact
        uses: actions/upload-artifact@v4
        with:
          name: a04-participantes-final
          path: ${{ env.OUT_DIR }}/participantes_completos_final.json
          if-no-files-found: error
