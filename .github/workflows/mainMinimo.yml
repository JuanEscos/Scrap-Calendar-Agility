name: Test Deployment

on:
  workflow_dispatch: {}

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run Prueba.py and create resultado.txt
        run: |
          python3 Prueba.py || true
          # si no lo crea tu script, creamos uno de prueba:
          [ -f resultado.txt ] || python3 - << 'PY'
from datetime import datetime
open("resultado.txt","w",encoding="utf-8").write(f"OK {datetime.now()}\n")
PY
          test -s resultado.txt
          sha256sum resultado.txt | awk '{print $1}' > local.sha256

      - name: Detectar usuario FTP válido
        id: detect
        env:
          FTP_SERVER:   ${{ secrets.FTP_SERVER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          U1: ${{ secrets.FTP_USERNAME }}
          U2: ${{ secrets.FTP_USERNAME }}@agilitydivertidog.com
        run: |
          set -e
          ok=""
          for U in "$U1" "$U2"; do
            [ -z "$U" ] && continue
            echo "Probando login como: $U"
            if curl -s --ssl-reqd --ftp-pasv --disable-epsv \
                 --user "$U:$FTP_PASSWORD" \
                 "ftp://$FTP_SERVER/" -l >/dev/null 2>&1; then
              ok="$U"; break
            fi
          done
          if [ -z "$ok" ]; then
            echo "No se pudo autenticar con ninguna variante"; exit 1
          fi
          echo "USER_OK=$ok" >> "$GITHUB_OUTPUT"
          echo "✅ Usuario válido: $ok"

      - name: Upload via FTPS (puerto 21)
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}   # ej: /www/NewWeb/Privado/Calendar
          USER_OK:        ${{ steps.detect.outputs.USER_OK }}
        run: |
          set -euo pipefail
          REMOTE_URL="ftp://${FTP_SERVER}${FTP_REMOTE_DIR}/resultado.txt"
          echo "➡ Subiendo a: $REMOTE_URL (usuario $USER_OK)"
          curl --fail --ssl-reqd --ftp-create-dirs --ftp-pasv --disable-epsv \
               --user "$USER_OK:$FTP_PASSWORD" \
               --upload-file "resultado.txt" "$REMOTE_URL"

      - name: Verify remote (download & compare hash)
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}
          USER_OK:        ${{ steps.detect.outputs.USER_OK }}
        run: |
          set -euo pipefail
          REMOTE_URL="ftp://${FTP_SERVER}${FTP_REMOTE_DIR}/resultado.txt"
          curl --fail --ssl-reqd --ftp-pasv --disable-epsv \
               --user "$USER_OK:$FTP_PASSWORD" \
               --output remote.txt "$REMOTE_URL"
          sha256sum remote.txt | awk '{print $1}' > remote.sha256
          diff -q local.sha256 remote.sha256
          echo "✅ Hash OK"
