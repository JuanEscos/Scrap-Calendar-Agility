name: 01 - Eventos Prox (JSON base)

on:
  schedule:
    - cron: '1 4 * * *'
  workflow_dispatch: {}

jobs:
  produce_01events:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Madrid
      FLOW_EMAIL: ${{ secrets.FLOW_EMAIL }}
      FLOW_PASS:  ${{ secrets.FLOW_PASS }}
      HEADLESS: "true"
      INCOGNITO: "true"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install beautifulsoup4 selenium webdriver-manager

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Run 01_eventosprox.py
        id: run01
        run: |
          set -euo pipefail
          mkdir -p output
          SCRIPT_PATH="$(find . -maxdepth 3 -type f -name '01_eventosprox.py' -print -quit)"
          [ -n "${SCRIPT_PATH:-}" ] || { echo "::error::No se encontró 01_eventosprox.py"; exit 1; }
          echo "Usando script: $SCRIPT_PATH"
          python "$SCRIPT_PATH"
          echo "Listando output:"
          ls -la ./output || true
          test -f ./output/events.json || { echo "::error::No se generó ./output/events.json"; exit 1; }
          cp -f ./output/events.json ./output/01events.json

      - name: Upload main artifact
        uses: actions/upload-artifact@v4
        with:
          name: a01-01events-json
          path: ./output/01events.json
          if-no-files-found: error
          retention-days: 7

      # Artefactos de depuración si algo va mal (o siempre, si quieres)
      - name: Upload debug (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: a01-debug
          path: |
            ./output/**
            - name: (FTPS) Listar carpeta remota (previo)
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_USERNAME:   ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}
        run: |
          set -euo pipefail
          BASE="ftp://${FTP_SERVER}${FTP_REMOTE_DIR}/ListadoEventos/Workflows/01"
          echo "Listando: ${BASE}/"
          curl --fail --ssl-reqd --user "${FTP_USERNAME}:${FTP_PASSWORD}" "${BASE}/" -l || true

      - name: (FTPS) Subir 01events.json (fijo + timestamp)
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_USERNAME:   ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}
        run: |
          set -euo pipefail
          FILE="./output/01events.json"
          [ -f "$FILE" ] || { echo "::error::No existe $FILE"; exit 1; }
          BASE="ftp://${FTP_SERVER}${FTP_REMOTE_DIR}/ListadoEventos/Workflows/01"
          TS="$(date -u +'%Y%m%dT%H%M%SZ')"

          echo "Subiendo (último): ${BASE}/01events_last.json"
          curl --fail --ssl-reqd --ftp-create-dirs --disable-epsv --ftp-skip-pasv-ip \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               --upload-file "$FILE" \
               "${BASE}/01events_last.json"

          echo "Subiendo (histórico): ${BASE}/01events_${TS}.json"
          curl --fail --ssl-reqd --ftp-create-dirs --disable-epsv --ftp-skip-pasv-ip \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               --upload-file "$FILE" \
               "${BASE}/01events_${TS}.json"

      - name: (FTPS) Verificar remoto (hash)
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_USERNAME:   ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}
        run: |
          set -euo pipefail
          FILE="./output/01events.json"
          BASE="ftp://${FTP_SERVER}${FTP_REMOTE_DIR}/ListadoEventos/Workflows/01"
          sha256sum "$FILE" | awk '{print $1}' > local.sha256
          curl --fail --ssl-reqd --disable-epsv --ftp-skip-pasv-ip \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               --output remote.json "${BASE}/01events_last.json"
          sha256sum remote.json | awk '{print $1}' > remote.sha256
          echo "Local : $(cat local.sha256)"
          echo "Remoto: $(cat remote.sha256)"
          diff -q local.sha256 remote.sha256 && echo "OK: hash coincide"

            ./01_error.png
          if-no-files-found: warn
          retention-days: 7
