name: Test Deployment

on:
  workflow_dispatch: {}

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run Python script
        run: |
          python3 Prueba.py
          test -s resultado.txt
          sha256sum resultado.txt > local.sha256

      - name: Upload resultado.txt via FTPS
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}      # ej: agilitydivertidog.com
          FTP_USERNAME:   ${{ secrets.FTP_USERNAME }}    # usuario FTP de tu hosting
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}    # contraseña FTP
          local-dir: './Scrap-Calendar-Agility/'
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}  # ej: /www/NewWeb/Privado/Calendar
          port: 21  # Add the port parameter
        run: |
          set -euo pipefail
          REMOTE="ftps://${FTP_SERVER}${FTP_REMOTE_DIR}/resultado.txt"
          echo "➡ Subiendo a: $REMOTE"
          curl --fail --ftp-ssl --ssl-reqd --ftp-create-dirs \
               --user "$FTP_USERNAME:$FTP_PASSWORD" \
               --upload-file "resultado.txt" "$REMOTE"

      - name: Verify remote file (download & compare hash)
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_USERNAME:   ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}
        run: |
          set -euo pipefail
          REMOTE="ftps://${FTP_SERVER}${FTP_REMOTE_DIR}/resultado.txt"
          curl --fail --ftp-ssl --ssl-reqd \
               --user "$FTP_USERNAME:$FTP_PASSWORD" \
               --output remote.txt "$REMOTE"
          sha256sum remote.txt > remote.sha256
          echo "Local : $(cut -d' ' -f1 local.sha256)"
          echo "Remoto: $(cut -d' ' -f1 remote.sha256)"
          diff -q local.sha256 remote.sha256
