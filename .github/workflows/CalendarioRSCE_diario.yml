name: Calendario RSCE diario

on:
  schedule:
    - cron: '5 4 * * *'   # 04:05 UTC
  workflow_dispatch: {}

jobs:
  run_and_upload:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Madrid

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Instalar dependencias (si existe requirements.txt)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Ejecutar script que genera el CSV
        run: |
          python "./Calendario RSCE 25.08.22.py"

      - name: Detectar CSV generado y calcular hash/tama√±o
        id: csv
        run: |
          set -euo pipefail
          CSV_PATH=""
          for p in "resultados_agility/eventos_agility_2025.csv" "eventos_agility_2025.csv"; do
            if [ -f "$p" ]; then CSV_PATH="$p"; break; fi
          done
          if [ -z "$CSV_PATH" ]; then
            CSV_PATH="$(ls -1 **/eventos_agility_2025.csv 2>/dev/null | head -n1 || true)"
          fi
          if [ -z "$CSV_PATH" ]; then
            echo "No se encontr√≥ eventos_agility_2025.csv"; exit 1
          fi
          echo "‚û° CSV encontrado en: $CSV_PATH"
          echo "csv_path=$CSV_PATH" >> "$GITHUB_OUTPUT"

          sha256sum "$CSV_PATH" | awk '{print $1}' > local.sha256
          echo "local_hash=$(cut -d' ' -f1 local.sha256)" >> "$GITHUB_OUTPUT"

          LOCAL_SIZE=$(stat -c%s "$CSV_PATH")
          echo "local_size=$LOCAL_SIZE" >> "$GITHUB_OUTPUT"
          echo "Hash local: $(cut -d' ' -f1 local.sha256)"
          echo "Tama√±o local: $LOCAL_SIZE bytes"

      - name: Listar carpeta remota (antes de subir)
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_USERNAME:   ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}    # /www/NewWeb/Privado
        run: |
          set -euo pipefail
          BASE="ftp://${FTP_SERVER}${FTP_REMOTE_DIR}/Calendar"
          echo "üìÇ Listando: ${BASE}/"
          curl --fail --ssl-reqd --user "${FTP_USERNAME}:${FTP_PASSWORD}" "${BASE}/" -l || true

      - name: Subir CSV por FTPS (robusto: binario, no EPSV, temp+rename)
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_USERNAME:   ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}    # /www/NewWeb/Privado
        run: |
          set -euo pipefail
          FULL_DIR="${FTP_REMOTE_DIR}/Calendar"
          BASE="ftp://${FTP_SERVER}${FULL_DIR}"
          FILE="eventos_agility_2025.csv"
          TMP="${BASE}/${FILE}.part"
          FINAL="${BASE}/${FILE}"

          echo "‚¨ÜÔ∏è  Subiendo (temporal): $TMP"
          # Forzar binario y TLS en datos; desactivar EPSV y evitar IP PASV err√≥nea.
          curl --fail --ssl-reqd --ftp-create-dirs --disable-epsv --ftp-skip-pasv-ip \
               --quote "TYPE I" --quote "PBSZ 0" --quote "PROT P" \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               --upload-file "${{ steps.csv.outputs.csv_path }}" "$TMP"

          echo "üîÅ Renombrando a definitivo‚Ä¶"
          curl --fail --ssl-reqd \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               --quote "RNFR ${FULL_DIR}/${FILE}.part" \
               --quote "RNTO ${FULL_DIR}/${FILE}" \
               "ftp://${FTP_SERVER}/"

      - name: Verificar remoto (listar, descargar y comparar hash/tama√±o)
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_USERNAME:   ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}
        run: |
          set -euo pipefail
          BASE="ftp://${FTP_SERVER}${FTP_REMOTE_DIR}/Calendar"
          FILE="eventos_agility_2025.csv"

          echo "üìÇ Listando tras subir: ${BASE}/"
          curl --fail --ssl-reqd --user "${FTP_USERNAME}:${FTP_PASSWORD}" "${BASE}/" -l

          echo "‚¨áÔ∏è  Descargando ${FILE} para verificaci√≥n‚Ä¶"
          curl --fail --ssl-reqd --disable-epsv --ftp-skip-pasv-ip \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               --output remote.csv "${BASE}/${FILE}"

          sha256sum remote.csv | awk '{print $1}' > remote.sha256
          echo "Hash local : ${{ steps.csv.outputs.local_hash }}"
          echo "Hash remoto: $(cut -d' ' -f1 remote.sha256)"
          diff -q local.sha256 remote.sha256

          REMOTE_SIZE=$(stat -c%s remote.csv)
          echo "Tama√±o remoto: $REMOTE_SIZE bytes"
          test "$REMOTE_SIZE" -eq "${{ steps.csv.outputs.local_size }}"
          echo "‚úÖ Hash y tama√±o coinciden"

      - name: Subir copia con fecha (AAAA-MM-DD) (opcional)
        if: always()
        env:
          FTP_SERVER:     ${{ secrets.FTP_SERVER }}
          FTP_USERNAME:   ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD:   ${{ secrets.FTP_PASSWORD }}
          FTP_REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR }}
        run: |
          set -euo pipefail
          D=$(date +%F)
          FULL_DIR="${FTP_REMOTE_DIR}/Calendar"
          BASE="ftp://${FTP_SERVER}${FULL_DIR}"
          SRC="${{ steps.csv.outputs.csv_path }}"
          TMP="${BASE}/eventos_agility_2025_${D}.csv.part"
          DST="${BASE}/eventos_agility_2025_${D}.csv"

          echo "‚¨ÜÔ∏è  Subiendo copia temporal: $TMP"
          curl --fail --ssl-reqd --ftp-create-dirs --disable-epsv --ftp-skip-pasv-ip \
               --quote "TYPE I" --quote "PBSZ 0" --quote "PROT P" \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               --upload-file "$SRC" "$TMP"

          echo "üîÅ Renombrando copia‚Ä¶"
          curl --fail --ssl-reqd \
               --user "${FTP_USERNAME}:${FTP_PASSWORD}" \
               --quote "RNFR ${FULL_DIR}/eventos_agility_2025_${D}.csv.part" \
               --quote "RNTO ${FULL_DIR}/eventos_agility_2025_${D}.csv" \
               "ftp://${FTP_SERVER}/"
